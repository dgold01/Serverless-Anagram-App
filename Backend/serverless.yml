service: code-test-backend

# Create an optimized package for our functions
package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs16.x
  stage: dev
  region: eu-north-1
  # To load environment variables externally
  # rename env.example to .env and uncomment
  # the following line. Also, make sure to not
  # commit your .env.
  #
  #environment:
  #  SAMPLE_ENV_VAR: ${env:SAMPLE_ENV_VAR}

functions:
  fetchWordList:
    handler: handler.fetchWordList
    events:
      - http:
          path: fetchWordList
          method: get
          cors:
            origin: "*"
            headers:
              - Content-Type
            allowCredentials: true
  storeHighScore:
    role: DynamoDBFullAccessRole
    handler: handler.storeHighScore
    events:
      - http:
          path: storeHighScore
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
            allowCredentials: true

resources:
  Resources:
    DynamoDBFullAccessRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: DynamoDBFullAccessRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action:
                - sts:AssumeRole
        Policies:
          - PolicyName: DynamoDBFullAccessPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:*
                  Resource:
                    - "arn:aws:dynamodb:eu-north-1:439975796198:table/calculationsTable"
    highscoreTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: highscoreTable
        AttributeDefinitions:
          - AttributeName: word
            AttributeType: S
        KeySchema:
          - AttributeName: word
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
